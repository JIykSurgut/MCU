;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22.04.2016 16:34:58
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF9D  	GOTO        314
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_UART1_Read:
;UARTx_Init.c,17 :: 		char UART1_Read(){
;UARTx_Init.c,18 :: 		R1 = RCREG1;
0x001C	0xF001CFAE  	MOVFF       RCREG1, R1
;UARTx_Init.c,19 :: 		if(RCSTA1.OERR) {
0x0020	0xA2AB      	BTFSS       RCSTA1, 1 
0x0022	0xD002      	BRA         L_UART1_Read2
;UARTx_Init.c,20 :: 		RCSTA.CREN = 0;
0x0024	0x98AB      	BCF         RCSTA, 4 
;UARTx_Init.c,21 :: 		RCSTA.CREN = 1;
0x0026	0x88AB      	BSF         RCSTA, 4 
;UARTx_Init.c,22 :: 		}
L_UART1_Read2:
;UARTx_Init.c,23 :: 		return R1;
0x0028	0xF000C001  	MOVFF       R1, R0
;UARTx_Init.c,24 :: 		}
L_end_UART1_Read:
0x002C	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Data_Ready:
;UARTx_Init.c,9 :: 		char UART1_Data_Ready(){
;UARTx_Init.c,10 :: 		return PIR1.RC1IF;
0x002E	0x0E00      	MOVLW       0
0x0030	0xBA9E      	BTFSC       PIR1, 5 
0x0032	0x0E01      	MOVLW       1
0x0034	0x6E00      	MOVWF       R0 
;UARTx_Init.c,11 :: 		}
L_end_UART1_Data_Ready:
0x0036	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_UART1_Write:
;UARTx_Init.c,26 :: 		void UART1_Write(char data_){
;UARTx_Init.c,27 :: 		while(TXSTA1.TRMT == 0);
L_UART1_Write3:
0x0038	0xB2AC      	BTFSC       TXSTA1, 1 
0x003A	0xD001      	BRA         L_UART1_Write4
0x003C	0xD7FD      	BRA         L_UART1_Write3
L_UART1_Write4:
;UARTx_Init.c,28 :: 		TXREG1 = data_;
0x003E	0xFFADC027  	MOVFF       FARG_UART1_Write_data_, TXREG1
;UARTx_Init.c,29 :: 		}
L_end_UART1_Write:
0x0042	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Tx_Idle:
;UARTx_Init.c,13 :: 		char UART1_Tx_Idle(){
;UARTx_Init.c,14 :: 		return TXSTA1.TRMT;
0x0044	0x0E00      	MOVLW       0
0x0046	0xB2AC      	BTFSC       TXSTA1, 1 
0x0048	0x0E01      	MOVLW       1
0x004A	0x6E00      	MOVWF       R0 
;UARTx_Init.c,15 :: 		}
L_end_UART1_Tx_Idle:
0x004C	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_UART1_Write_Text:
;UARTx_Init.c,56 :: 		void UART1_Write_Text(char* uart_text){
;UARTx_Init.c,57 :: 		char counter = 0x00;
0x004E	0x6A22      	CLRF        UART1_Write_Text_counter_L0 
;UARTx_Init.c,58 :: 		char data_ = *uart_text;
0x0050	0xFFE9C01F  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x0054	0xFFEAC020  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x0058	0xF021CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;UARTx_Init.c,59 :: 		while(data_ != 0x00){
L_UART1_Write_Text14:
0x005C	0x5021      	MOVF        UART1_Write_Text_data__L0, 0 
0x005E	0x0A00      	XORLW       0
0x0060	0xE00D      	BZ          L_UART1_Write_Text15
;UARTx_Init.c,60 :: 		UART1_Write(data_);
0x0062	0xF027C021  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x0066	0xDFE8      	RCALL       _UART1_Write
;UARTx_Init.c,61 :: 		data_ = ((char*)uart_text)[++counter];
0x0068	0x2A22      	INCF        UART1_Write_Text_counter_L0, 1 
0x006A	0x5022      	MOVF        UART1_Write_Text_counter_L0, 0 
0x006C	0x241F      	ADDWF       FARG_UART1_Write_Text_uart_text, 0 
0x006E	0x6EE9      	MOVWF       FSR0L 
0x0070	0x0E00      	MOVLW       0
0x0072	0x2020      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0 
0x0074	0x6EEA      	MOVWF       FSR0H 
0x0076	0xF021CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;UARTx_Init.c,62 :: 		}
0x007A	0xD7F0      	BRA         L_UART1_Write_Text14
L_UART1_Write_Text15:
;UARTx_Init.c,63 :: 		}
L_end_UART1_Write_Text:
0x007C	0x0012      	RETURN      0
; end of _UART1_Write_Text
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x007E	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0080	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0084	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0086	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0088	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x008A	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x008C	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Init:
;UARTx_Init.c,1 :: 		void UART1_Init(const unsigned long baud_rate){
;UARTx_Init.c,2 :: 		TXSTA1.TXEN = 1;
0x008E	0x8AAC      	BSF         TXSTA1, 5 
;UARTx_Init.c,3 :: 		RCSTA1 = 0x90;
0x0090	0x0E90      	MOVLW       144
0x0092	0x6EAB      	MOVWF       RCSTA1 
;UARTx_Init.c,4 :: 		TRISC.TRISC7 = 1;
0x0094	0x8E94      	BSF         TRISC, 7 
;UARTx_Init.c,5 :: 		TRISC.TRISC6 = 0;
0x0096	0x9C94      	BCF         TRISC, 6 
;UARTx_Init.c,6 :: 		while(PIR1.RC1IF) R0 = RCREG1;
L_UART1_Init0:
0x0098	0xAA9E      	BTFSS       PIR1, 5 
0x009A	0xD003      	BRA         L_UART1_Init1
0x009C	0xF000CFAE  	MOVFF       RCREG1, R0
0x00A0	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;UARTx_Init.c,7 :: 		}
L_end_UART1_Init:
0x00A2	0x0012      	RETURN      0
; end of _UART1_Init
_UART1_Read_Text:
;UARTx_Init.c,31 :: 		void UART1_Read_Text(char* Output, char* Delimiter, char Attempts){
;UARTx_Init.c,32 :: 		char out_idx = 0x00;
0x00A4	0x6A25      	CLRF        UART1_Read_Text_out_idx_L0 
0x00A6	0x6A26      	CLRF        UART1_Read_Text_delim_idx_L0 
;UARTx_Init.c,35 :: 		while(Attempts){
L_UART1_Read_Text5:
0x00A8	0x5223      	MOVF        FARG_UART1_Read_Text_Attempts, 1 
0x00AA	0xE041      	BZ          L_UART1_Read_Text6
;UARTx_Init.c,36 :: 		if(Attempts != 0xFF) Attempts--;
0x00AC	0x5023      	MOVF        FARG_UART1_Read_Text_Attempts, 0 
0x00AE	0x0AFF      	XORLW       255
0x00B0	0xA4D8      	BTFSS       STATUS, 2 
0x00B2	0x0623      	DECF        FARG_UART1_Read_Text_Attempts, 1 
L_UART1_Read_Text7:
;UARTx_Init.c,37 :: 		while(UART1_Data_Ready() == 0 );
L_UART1_Read_Text8:
0x00B4	0xDFBC      	RCALL       _UART1_Data_Ready
0x00B6	0x5000      	MOVF        R0, 0 
0x00B8	0x0A00      	XORLW       0
0x00BA	0xE101      	BNZ         L_UART1_Read_Text9
0x00BC	0xD7FB      	BRA         L_UART1_Read_Text8
L_UART1_Read_Text9:
;UARTx_Init.c,38 :: 		r_data = UART1_Read();
0x00BE	0xDFAE      	RCALL       _UART1_Read
0x00C0	0xF024C000  	MOVFF       R0, UART1_Read_Text_r_data_L0
;UARTx_Init.c,40 :: 		((char*)Output)[out_idx++] = r_data;
0x00C4	0x5025      	MOVF        UART1_Read_Text_out_idx_L0, 0 
0x00C6	0x241F      	ADDWF       FARG_UART1_Read_Text_Output, 0 
0x00C8	0x6EE1      	MOVWF       FSR1L 
0x00CA	0x0E00      	MOVLW       0
0x00CC	0x2020      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0 
0x00CE	0x6EE2      	MOVWF       FSR1H 
0x00D0	0xFFE6C000  	MOVFF       R0, POSTINC1
0x00D4	0x2A25      	INCF        UART1_Read_Text_out_idx_L0, 1 
;UARTx_Init.c,42 :: 		if(((char*)Delimiter)[delim_idx] == r_data) delim_idx++;
0x00D6	0x5026      	MOVF        UART1_Read_Text_delim_idx_L0, 0 
0x00D8	0x2421      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0 
0x00DA	0x6EE9      	MOVWF       FSR0L 
0x00DC	0x0E00      	MOVLW       0
0x00DE	0x2022      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0 
0x00E0	0x6EEA      	MOVWF       FSR0H 
0x00E2	0x50EE      	MOVF        POSTINC0, 0 
0x00E4	0x1824      	XORWF       UART1_Read_Text_r_data_L0, 0 
0x00E6	0xE102      	BNZ         L_UART1_Read_Text10
0x00E8	0x2A26      	INCF        UART1_Read_Text_delim_idx_L0, 1 
0x00EA	0xD009      	BRA         L_UART1_Read_Text11
L_UART1_Read_Text10:
;UARTx_Init.c,44 :: 		delim_idx = 0x00;
0x00EC	0x6A26      	CLRF        UART1_Read_Text_delim_idx_L0 
;UARTx_Init.c,45 :: 		if(*Delimiter == r_data) delim_idx++;
0x00EE	0xFFE9C021  	MOVFF       FARG_UART1_Read_Text_Delimiter, FSR0L
0x00F2	0xFFEAC022  	MOVFF       FARG_UART1_Read_Text_Delimiter+1, FSR0H
0x00F6	0x50EE      	MOVF        POSTINC0, 0 
0x00F8	0x1824      	XORWF       UART1_Read_Text_r_data_L0, 0 
0x00FA	0xB4D8      	BTFSC       STATUS, 2 
0x00FC	0x2A26      	INCF        UART1_Read_Text_delim_idx_L0, 1 
L_UART1_Read_Text12:
;UARTx_Init.c,46 :: 		}
L_UART1_Read_Text11:
;UARTx_Init.c,48 :: 		if( ((char*)Delimiter)[delim_idx] == 0x00){
0x00FE	0x5026      	MOVF        UART1_Read_Text_delim_idx_L0, 0 
0x0100	0x2421      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0 
0x0102	0x6EE9      	MOVWF       FSR0L 
0x0104	0x0E00      	MOVLW       0
0x0106	0x2022      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0 
0x0108	0x6EEA      	MOVWF       FSR0H 
0x010A	0x50EE      	MOVF        POSTINC0, 0 
0x010C	0x0A00      	XORLW       0
0x010E	0xE10E      	BNZ         L_UART1_Read_Text13
;UARTx_Init.c,49 :: 		((char*)Output)[out_idx - delim_idx] = 0x00;
0x0110	0x5026      	MOVF        UART1_Read_Text_delim_idx_L0, 0 
0x0112	0x5C25      	SUBWF       UART1_Read_Text_out_idx_L0, 0 
0x0114	0x6E00      	MOVWF       R0 
0x0116	0x6A01      	CLRF        R1 
0x0118	0x0E00      	MOVLW       0
0x011A	0x5A01      	SUBWFB      R1, 1 
0x011C	0x5000      	MOVF        R0, 0 
0x011E	0x241F      	ADDWF       FARG_UART1_Read_Text_Output, 0 
0x0120	0x6EE1      	MOVWF       FSR1L 
0x0122	0x5001      	MOVF        R1, 0 
0x0124	0x2020      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0 
0x0126	0x6EE2      	MOVWF       FSR1H 
0x0128	0x6AE6      	CLRF        POSTINC1 
;UARTx_Init.c,50 :: 		return;
0x012A	0xD006      	BRA         L_end_UART1_Read_Text
;UARTx_Init.c,51 :: 		}
L_UART1_Read_Text13:
;UARTx_Init.c,52 :: 		}
0x012C	0xD7BD      	BRA         L_UART1_Read_Text5
L_UART1_Read_Text6:
;UARTx_Init.c,53 :: 		*Output = 0x00;
0x012E	0xFFE1C01F  	MOVFF       FARG_UART1_Read_Text_Output, FSR1L
0x0132	0xFFE2C020  	MOVFF       FARG_UART1_Read_Text_Output+1, FSR1H
0x0136	0x6AE6      	CLRF        POSTINC1 
;UARTx_Init.c,54 :: 		}
L_end_UART1_Read_Text:
0x0138	0x0012      	RETURN      0
; end of _UART1_Read_Text
_main:
0x013A	0x0E55      	MOVLW       85
0x013C	0x6E15      	MOVWF       ?lstr2_UARTx_Init 
0x013E	0x0E41      	MOVLW       65
0x0140	0x6E16      	MOVWF       22 
0x0142	0x0E52      	MOVLW       82
0x0144	0x6E17      	MOVWF       23 
0x0146	0x0E54      	MOVLW       84
0x0148	0x6E18      	MOVWF       24 
0x014A	0x6A19      	CLRF        25 
0x014C	0x0E4F      	MOVLW       79
0x014E	0x6E1A      	MOVWF       ?lstr1_UARTx_Init 
0x0150	0x0E4B      	MOVLW       75
0x0152	0x6E1B      	MOVWF       27 
0x0154	0x6A1C      	CLRF        28 
;UARTx_Init.c,66 :: 		void main() {
;UARTx_Init.c,67 :: 		UART1_Init(9600);
0x0156	0x86B8      	BSF         BAUDCON, 3, 0
0x0158	0x6AB0      	CLRF        SPBRGH 
0x015A	0x0ECF      	MOVLW       207
0x015C	0x6EAF      	MOVWF       SPBRG 
0x015E	0x84AC      	BSF         TXSTA, 2, 0
0x0160	0xDF96      	RCALL       _UART1_Init
;UARTx_Init.c,69 :: 		if(UART1_Data_Ready()==1){
0x0162	0xDF65      	RCALL       _UART1_Data_Ready
0x0164	0x5000      	MOVF        R0, 0 
0x0166	0x0A01      	XORLW       1
0x0168	0xE10B      	BNZ         L_main16
;UARTx_Init.c,70 :: 		UART1_Read_Text(output, "OK", 10);
0x016A	0xF01FC01D  	MOVFF       _output, FARG_UART1_Read_Text_Output
0x016E	0xF020C01E  	MOVFF       _output+1, FARG_UART1_Read_Text_Output+1
0x0172	0x0E1A      	MOVLW       ?lstr1_UARTx_Init
0x0174	0x6E21      	MOVWF       FARG_UART1_Read_Text_Delimiter 
0x0176	0x0E00      	MOVLW       hi_addr(?lstr1_UARTx_Init)
0x0178	0x6E22      	MOVWF       FARG_UART1_Read_Text_Delimiter+1 
0x017A	0x0E0A      	MOVLW       10
0x017C	0x6E23      	MOVWF       FARG_UART1_Read_Text_Attempts 
0x017E	0xDF92      	RCALL       _UART1_Read_Text
;UARTx_Init.c,71 :: 		}
L_main16:
;UARTx_Init.c,73 :: 		if (UART1_Tx_Idle() == 1) {
0x0180	0xDF61      	RCALL       _UART1_Tx_Idle
0x0182	0x5000      	MOVF        R0, 0 
0x0184	0x0A01      	XORLW       1
0x0186	0xE105      	BNZ         L_main17
;UARTx_Init.c,74 :: 		UART1_Write_Text("UART");
0x0188	0x0E15      	MOVLW       ?lstr2_UARTx_Init
0x018A	0x6E1F      	MOVWF       FARG_UART1_Write_Text_uart_text 
0x018C	0x0E00      	MOVLW       hi_addr(?lstr2_UARTx_Init)
0x018E	0x6E20      	MOVWF       FARG_UART1_Write_Text_uart_text+1 
0x0190	0xDF5E      	RCALL       _UART1_Write_Text
;UARTx_Init.c,75 :: 		}
L_main17:
;UARTx_Init.c,76 :: 		}
L_end_main:
0x0192	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _UART1_Read
0x002E      [10]    _UART1_Data_Ready
0x0038      [12]    _UART1_Write
0x0044      [10]    _UART1_Tx_Idle
0x004E      [48]    _UART1_Write_Text
0x007E      [16]    ___CC2DW
0x008E      [22]    _UART1_Init
0x00A4     [150]    _UART1_Read_Text
0x013A      [90]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [5]    ?lstr2_UARTx_Init
0x001A       [3]    ?lstr1_UARTx_Init
0x001D       [2]    _output
0x001F       [4]    FARG_UART1_Init_baud_rate
0x001F       [2]    FARG_UART1_Read_Text_Output
0x001F       [2]    FARG_UART1_Write_Text_uart_text
0x0021       [2]    FARG_UART1_Read_Text_Delimiter
0x0021       [1]    UART1_Write_Text_data__L0
0x0022       [1]    UART1_Write_Text_counter_L0
0x0023       [1]    FARG_UART1_Read_Text_Attempts
0x0024       [1]    UART1_Read_Text_r_data_L0
0x0025       [1]    UART1_Read_Text_out_idx_L0
0x0026       [1]    UART1_Read_Text_delim_idx_L0
0x0027       [1]    FARG_UART1_Write_data_
0x0F94       [1]    TRISC
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAC       [1]    TXSTA1
0x0FAD       [1]    TXREG1
0x0FAE       [1]    RCREG1
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Read_Text5
  L_UART1_Read_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Write_Text14
  L_UART1_Write_Text15
  L_main16
  L_main17
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_main
  _main
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp